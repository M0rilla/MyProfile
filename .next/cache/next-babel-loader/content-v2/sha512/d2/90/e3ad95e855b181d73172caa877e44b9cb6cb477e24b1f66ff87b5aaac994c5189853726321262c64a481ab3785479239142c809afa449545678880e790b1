{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Gustavo Morilla\\\\MyProfile\\\\pages\\\\resume\\\\viewer.js\";\nimport React, { useRef, useEffect } from 'react';\nimport WebViewer from '@pdftron/webviewer';\n\nconst Viewer = () => {\n  const viewer = useRef(null); // if using a class, equivalent of componentDidMount \n\n  useEffect(() => {\n    WebViewer({\n      path: '/lib',\n      initialDoc: '/pdf/GustavoMorilla-Curriculo.pdf'\n    }, viewer.current).then(instance => {\n      const {\n        docViewer,\n        Annotations\n      } = instance;\n      const annotManager = docViewer.getAnnotationManager();\n      docViewer.on('documentLoaded', () => {\n        const rectangleAnnot = new Annotations.RectangleAnnotation();\n        rectangleAnnot.PageNumber = 1; // values are in page coordinates with (0, 0) in the top left\n\n        rectangleAnnot.X = 100;\n        rectangleAnnot.Y = 150;\n        rectangleAnnot.Width = 200;\n        rectangleAnnot.Height = 50;\n        rectangleAnnot.Author = annotManager.getCurrentUser();\n        annotManager.addAnnotation(rectangleAnnot); // need to draw the annotation otherwise it won't show up until the page is refreshed\n\n        annotManager.redrawAnnotation(rectangleAnnot);\n      });\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Viewer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: \"React sample\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"webviewer\",\n      ref: viewer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Viewer;","map":{"version":3,"sources":["C:/Users/Gustavo Morilla/MyProfile/pages/resume/viewer.js"],"names":["React","useRef","useEffect","WebViewer","Viewer","viewer","path","initialDoc","current","then","instance","docViewer","Annotations","annotManager","getAnnotationManager","on","rectangleAnnot","RectangleAnnotation","PageNumber","X","Y","Width","Height","Author","getCurrentUser","addAnnotation","redrawAnnotation"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,OAAzC;AACA,OAAOC,SAAP,MAAsB,oBAAtB;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACnB,QAAMC,MAAM,GAAGJ,MAAM,CAAC,IAAD,CAArB,CADmB,CAGnB;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,SAAS,CACP;AACEG,MAAAA,IAAI,EAAE,MADR;AAEEC,MAAAA,UAAU,EAAE;AAFd,KADO,EAKPF,MAAM,CAACG,OALA,CAAT,CAMEC,IANF,CAMQC,QAAD,IAAc;AACnB,YAAM;AAAEC,QAAAA,SAAF;AAAaC,QAAAA;AAAb,UAA6BF,QAAnC;AACA,YAAMG,YAAY,GAAGF,SAAS,CAACG,oBAAV,EAArB;AAEAH,MAAAA,SAAS,CAACI,EAAV,CAAa,gBAAb,EAA+B,MAAM;AACnC,cAAMC,cAAc,GAAG,IAAIJ,WAAW,CAACK,mBAAhB,EAAvB;AACAD,QAAAA,cAAc,CAACE,UAAf,GAA4B,CAA5B,CAFmC,CAGnC;;AACAF,QAAAA,cAAc,CAACG,CAAf,GAAmB,GAAnB;AACAH,QAAAA,cAAc,CAACI,CAAf,GAAmB,GAAnB;AACAJ,QAAAA,cAAc,CAACK,KAAf,GAAuB,GAAvB;AACAL,QAAAA,cAAc,CAACM,MAAf,GAAwB,EAAxB;AACAN,QAAAA,cAAc,CAACO,MAAf,GAAwBV,YAAY,CAACW,cAAb,EAAxB;AAEAX,QAAAA,YAAY,CAACY,aAAb,CAA2BT,cAA3B,EAVmC,CAWnC;;AACAH,QAAAA,YAAY,CAACa,gBAAb,CAA8BV,cAA9B;AACD,OAbD;AAcD,KAxBD;AAyBD,GA1BQ,EA0BN,EA1BM,CAAT;AA4BA,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,WAAf;AAA2B,MAAA,GAAG,EAAEX;AAAhC;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAtCD;;AAwCA,eAAeD,MAAf","sourcesContent":["import React, { useRef, useEffect } from 'react';\r\nimport WebViewer from '@pdftron/webviewer';\r\n\r\nconst Viewer = () => {\r\n  const viewer = useRef(null);\r\n\r\n  // if using a class, equivalent of componentDidMount \r\n  useEffect(() => {\r\n    WebViewer(\r\n      {\r\n        path: '/lib',\r\n        initialDoc: '/pdf/GustavoMorilla-Curriculo.pdf',\r\n      },\r\n      viewer.current,\r\n    ).then((instance) => {\r\n      const { docViewer, Annotations } = instance;\r\n      const annotManager = docViewer.getAnnotationManager();\r\n\r\n      docViewer.on('documentLoaded', () => {\r\n        const rectangleAnnot = new Annotations.RectangleAnnotation();\r\n        rectangleAnnot.PageNumber = 1;\r\n        // values are in page coordinates with (0, 0) in the top left\r\n        rectangleAnnot.X = 100;\r\n        rectangleAnnot.Y = 150;\r\n        rectangleAnnot.Width = 200;\r\n        rectangleAnnot.Height = 50;\r\n        rectangleAnnot.Author = annotManager.getCurrentUser();\r\n\r\n        annotManager.addAnnotation(rectangleAnnot);\r\n        // need to draw the annotation otherwise it won't show up until the page is refreshed\r\n        annotManager.redrawAnnotation(rectangleAnnot);\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"Viewer\">\r\n      <div className=\"header\">React sample</div>\r\n      <div className=\"webviewer\" ref={viewer}></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Viewer;"]},"metadata":{},"sourceType":"module"}